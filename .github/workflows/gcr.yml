name: Main automation

on:
  push:
    branches:
      - main

concurrency:
  group: main-automation

jobs:
  compute-build-info:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.build-info.outputs.sha_short }}
      date: ${{ steps.build-info.outputs.date }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    needs: compute-build-info
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            VUE_APP_RECAPTCHA_SITE_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_RECAPTCHA_SITE_KEY
            VUE_APP_ROLE:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_ROLE
            VUE_APP_DEBIO_USE_TOKEN_NAME:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_DEBIO_USE_TOKEN_NAME
            VUE_APP_DEBIO_ESCROW_ETH_ADDRESS:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_DEBIO_ESCROW_ETH_ADDRESS
            VUE_APP_DEBIO_SUBSTRATE_WS:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_DEBIO_SUBSTRATE_WS
            VUE_APP_WEB3_RPC:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_WEB3_RPC
            VUE_APP_BACKEND_API:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_BACKEND_API
            VUE_APP_DEBIO_API_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_DEBIO_API_KEY
            VUE_APP_USERNAME:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_USERNAME
            VUE_APP_PASSWORD:${{ secrets.DEV_GCP_PROJECT_ID }}/VUE_APP_PASSWORD
      - name: Create .env & gcp sa
        shell: bash
        run: |
          tee -a .env <<EOF
          VUE_APP_RECAPTCHA_SITE_KEY=${{ steps.secrets.outputs.VUE_APP_RECAPTCHA_SITE_KEY }}
          VUE_APP_ROLE=${{ steps.secrets.outputs.VUE_APP_ROLE }}
          VUE_APP_DEBIO_USE_TOKEN_NAME=${{ steps.secrets.outputs.VUE_APP_DEBIO_USE_TOKEN_NAME }}
          VUE_APP_DEBIO_ESCROW_ETH_ADDRESS=${{ steps.secrets.outputs.VUE_APP_DEBIO_ESCROW_ETH_ADDRESS }}
          VUE_APP_DEBIO_SUBSTRATE_WS=${{ steps.secrets.outputs.VUE_APP_DEBIO_SUBSTRATE_WS }}
          VUE_APP_WEB3_RPC=${{ steps.secrets.outputs.VUE_APP_WEB3_RPC }}
          VUE_APP_BACKEND_API=${{ steps.secrets.outputs.VUE_APP_BACKEND_API }}
          VUE_APP_DEBIO_API_KEY=${{ steps.secrets.outputs.VUE_APP_DEBIO_API_KEY }}
          VUE_APP_USERNAME=${{ steps.secrets.outputs.VUE_APP_USERNAME }}
          VUE_APP_PASSWORD=${{ steps.secrets.outputs.VUE_APP_PASSWORD }}
          EOF
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-main
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_SA }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: .maintain/docker/Dockerfile
          tags: |
            gcr.io/${{ secrets.DEV_GCP_PROJECT_ID }}/${{ github.repository }}:${{ needs.compute-build-info.outputs.sha_short }}-${{ needs.compute-build-info.outputs.date }}
            gcr.io/${{ secrets.DEV_GCP_PROJECT_ID }}/${{ github.repository }}:latest-pre-alpha
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [compute-build-info, build-and-publish-docker-image]
    env:
      DEPLOY: ${{ secrets.DEV_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            SSH_HOST:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            echo "Hi"
