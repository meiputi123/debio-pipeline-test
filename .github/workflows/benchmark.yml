name: Benchmark automation

on:
  issue_comment:
    types:
    - created

concurrency:
  group: benchmark-automation

jobs:
  compute-build-info:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.build-info.outputs.sha_short }}
      date: ${{ steps.build-info.outputs.date }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

  # start-runner:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Set up Cloud SDK
  #       uses: google-github-actions/setup-gcloud@master
  #       with:
  #         project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
  #         service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: start runner
  #       run: gcloud compute instances start github-runner-debio-node-benchmark --zone=australia-southeast1-b

  self-host:
    runs-on: [ubuntu-latest]
    needs: compute-build-info
    if: github.event.issue.pull_request
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Install toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: nightly
      #     components: clippy, rustfmt
      #     target: wasm32-unknown-unknown
      #     override: true
      #     default: true
      # - name: Rust cache
      #   uses: Swatinem/rust-cache@v1.3.0
      # - name: benchmarking
      #   if: ${{ github.event.issue.pull_request && github.event.comment.body == '/benchmark'}}
      #   run: |
      #     cargo +nightly run --release --features=runtime-benchmarks --locked -- benchmark \
      #         --chain=dev \
      #         --execution=wasm \
      #         --wasm-execution=compiled \
      #         --pallet="electronic-medical-record" \
      #         --extrinsic="*" \
      #         --steps=20 \
      #         --repeat=10 \
      #         --heap-pages=4096 \
      #         --raw \
      #         --output="./pallets/electronic-medical-record/src/weights.rs" \
      #         --template="./.maintain/pallet-weight-template.hbs"
      - name: benchmarking
        if: ${{ github.event.issue.pull_request && github.event.comment.body == '/benchmark'}}
        run: |          
          rm -rf benchmark
          mkdir -p benchmark
          touch benchmark/benchmark.text

          tee -a benchmark/benchmark.text <<EOF
          ${{ needs.compute-build-info.outputs.sha_short }} - ${{ needs.compute-build-info.outputs.date }}-from-PR
          EOF

          ls -la
          
          cat benchmark/benchmark.text

          git status
          git remote -v
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # push-to-fork: meziaris/debio-pipeline-test
          commit-message: Update Benchmark
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: auto-benchmark
          delete-branch: true
          title: "Update Benchmark"
          body: |
            Update benchmark
            
            :crown: *An automated PR*
          labels: benchmark
          assignees: meziaris
          reviewers: meiputi123
          draft: false

  # stop-runner:
  #   runs-on: ubuntu-latest
  #   needs: self-host
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Set up Cloud SDK
  #       uses: google-github-actions/setup-gcloud@master
  #       with:
  #         project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
  #         service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: stop runner
  #       run: gcloud compute instances stop github-runner-debio-node-benchmark --zone=australia-southeast1-b
