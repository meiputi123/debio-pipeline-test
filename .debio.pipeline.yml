---
kind: pipeline
type: docker
name: debio frontend revamp deployment
trigger:
  branch:
    - development
    - master
    - staging
  event:
    - pull_request

platform:
  os: linux
  arch: amd64

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: whitelist
    host:
      path: /etc/docker/daemon.json
  - name: toolkit
    host:
      path: /data/drone_data

steps:
  - name: verify pull request
    pull: if-not-exists
    image: alpine/git
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -approval -repo=debionetwork/debio-customer-ui -id=${DRONE_PULL_REQUEST}
    when:
      branch:
        - master
        - staging
        - development

  - name: build - devel
    pull: if-not-exists
    image: google/cloud-sdk:alpine
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -vault -env -secret=debio_development/data/frontend_dashboard
      - /data/drone_data/gcmd/build_frontend_revamp
    when:
      branch:
        - development

  - name: build - staging
    pull: if-not-exists
    image: google/cloud-sdk:alpine
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -vault -env -secret=debio_staging/data/frontend_dashboard
      - /data/drone_data/debio_toolkit -vault -raw -secret=debio_staging/data/frontend_file
      - /data/drone_data/gcmd/build_frontend_stg
    when:
      branch:
        - staging

  - name: build - demo
    pull: if-not-exists
    image: google/cloud-sdk:alpine
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -vault -env -secret=debio_production/data/frontend_dashboard
      - /data/drone_data/gcmd/build_frontend_prod
    when:
      branch:
        - master

  - name: merge pull request
    pull: if-not-exists
    image: alpine/git
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -squash -repo=debionetwork/debio-customer-ui -id=${DRONE_PULL_REQUEST}
    when:
      branch:
        - master
        - staging
        - development

  - name: reload service - devel
    pull: if-not-exists
    image: appleboy/drone-ssh
    volumes:
      - name: toolkit
        path: /data/drone_data
    settings:
      host:
        from_secret: devel_host
      username:
        from_secret: devel_uname
      key_path: /data/drone_data/.ssh/id_rsa
      port: 22
      script:
        - docker stop debio_frontend_revamp_dev || true && docker rm debio_frontend_revamp_dev || true
        - docker rmi hub.debio.network/debio_frontend_revamp_dev:latest && docker pull hub.debio.network/debio_frontend_revamp_dev:latest
        - docker run -d --name=debio_frontend_revamp_dev --env=debioenv=development -v /etc/localtime:/etc/localtime:ro -p 0.0.0.0:8085:80 --restart=always hub.debio.network/debio_frontend_revamp_dev:latest
    when:
      branch:
        - development

  - name: reload service - staging
    pull: if-not-exists
    image: appleboy/drone-ssh
    volumes:
      - name: toolkit
        path: /data/drone_data
    settings:
      host:
        from_secret: stg_host
      username:
        from_secret: stg_uname
      key_path: /data/drone_data/.ssh/id_rsa
      port: 22
      script:
        - docker stop debio_frontend_revamp_staging || true && docker rm debio_frontend_revamp_staging || true
        - docker rmi hub.debio.network/debio_frontend_revamp_staging:latest && docker pull hub.debio.network/debio_frontend_revamp_staging:latest
        - docker run -d --network=host --name=debio_frontend_revamp_staging --env=DEBIOENV=demo -v /etc/localtime:/etc/localtime:ro --restart=always hub.debio.network/debio_frontend_revamp_staging:latest
    when:
      branch:
        - staging

  - name: reload service - demo
    pull: if-not-exists
    image: appleboy/drone-ssh
    volumes:
      - name: toolkit
        path: /data/drone_data
    settings:
      host:
        from_secret: stg_host
      username:
        from_secret: stg_uname
      key_path: /data/drone_data/.ssh/id_rsa
      port: 22
      script:
        - docker stop debio_frontend_revamp_demo || true && docker rm debio_frontend_revamp_demo || true
        - docker rmi hub.debio.network/debio_frontend_revamp_demo:latest && docker pull hub.debio.network/debio_frontend_revamp_demo:latest
        - docker run -d --network=host --name=debio_frontend_revamp_demo --env=DEBIOENV=demo -v /etc/localtime:/etc/localtime:ro --restart=always hub.debio.network/debio_frontend_revamp_demo:latest
    when:
      branch:
        - master

  - name: notify deployment on discord
    image: appleboy/drone-discord
    pull: if-not-exists
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      message: >
        {{#success build.status}}
        ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.

        📝 Commit by {{commit.author}} on

        `{{commit.branch}}`:

        ```
        {{commit.message}}
        ```

        🌐 {{ build.link }}
        {{else}}
        ❌ Build #{{build.number}} of `{{repo.name}}` failed.

        📝 Commit by {{commit.author}} on

        `{{commit.branch}}`:

        ```
        {{commit.message}}
        ```
        🌐 {{ build.link }}
        🌐 {{ commit.link }}
        {{/success}}
    when:
      status: [ success, failure ]
      branch:
        - master
        - staging
        - development

  - name: notify deployment on telegram
    image: appleboy/drone-telegram
    settings:
      token: 
        from_secret: telegram_bot_token
      to: 
        from_secret: telegram_channel_id
      message: >
        {{#success build.status}}
        ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.

        📝 Commit by {{commit.author}} on

        `{{commit.branch}}`:

        ```
        {{commit.message}}
        ```

        🌐 {{ build.link }}
        🌐 {{ commit.link }}
        {{/success}}
    when:
      status: [ success, failure ]
      branch:
        - master
        - staging
        - development

---
kind: secret
name: devel_host
get:
  path: drone_development/deploy_target
  name: devel_host
---
kind: secret
name: devel_key
get:
  path: drone_development/deploy_target
  name: devel_key
---
kind: secret
name: devel_uname
get:
  path: drone_development/deploy_target
  name: devel_uname
---
kind: secret
name: stg_host
get:
  path: drone_staging/deploy_target
  name: stg_host
---
kind: secret
name: stg_key
get:
  path: drone_staging/deploy_target
  name: stg_key
---
kind: secret
name: stg_uname
get:
  path: drone_staging/deploy_target
  name: stg_uname
---
kind: secret
name: discord_id
get:
  path: drone_common_config/webhook
  name: discord_id
---
kind: secret
name: discord_token
get:
  path: drone_common_config/webhook
  name: discord_token
---
kind: secret
name: telegram_channel_id
get:
  path: drone_common_config/webhook
  name: telegram_channel_id
---
kind: secret
name: telegram_bot_token
get:
  path: drone_common_config/webhook
  name: telegram_bot_token
---
kind: secret
name: deploy_auth
get:
  path: drone_common_config/file_path
  name: deploy_auth
